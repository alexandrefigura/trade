#!/usr/bin/env python3
"""
Configura√ß√£o completa do Telegram e sistema de trading
"""
import os
import yaml
import requests
from pathlib import Path

print("üîß CONFIGURA√á√ÉO COMPLETA DO SISTEMA")
print("=" * 60)

# 1. Criar/Atualizar .env
print("\n1Ô∏è‚É£ Configurando arquivo .env...")
env_content = """# Binance API (adicione suas chaves se tiver)
BINANCE_API_KEY=l9MdCeVSSFznHVYNbQ5SkPcvjIjw7vbYSjogsXHWzdpvAcwGlrjMWDLmpyBVeEAo
BINANCE_API_SECRET=0pyVGlM6OQlELbsdf1xPEkUXYge9CoZOLHgETZTNWtOlfehlOTNpYaNDmBp1pUeI

# Telegram Configuration
TELEGRAM_BOT_TOKEN=8199550294:AAEMIRLicQ167ED7Wz4cc_u2xAjHvAzpVTM
TELEGRAM_CHAT_ID=1025666426
"""

with open(".env", "w", encoding='utf-8') as f:
    f.write(env_content)
print("‚úÖ Arquivo .env criado com credenciais do Telegram!")

# 2. Testar conex√£o com Telegram
print("\n2Ô∏è‚É£ Testando conex√£o com Telegram...")
token = "8199550294:AAEMIRLicQ167ED7Wz4cc_u2xAjHvAzpVTM"
chat_id = "1025666426"

url = f"https://api.telegram.org/bot{token}/sendMessage"
test_message = {
    "chat_id": chat_id,
    "text": "üéâ <b>Sistema de Trading Configurado!</b>\n\n"
            "‚úÖ Telegram conectado com sucesso!\n"
            "üìä Voc√™ receber√° alertas sobre:\n"
            "‚Ä¢ Abertura/fechamento de posi√ß√µes\n"
            "‚Ä¢ Trades grandes (baleias üêã)\n"
            "‚Ä¢ An√°lises t√©cnicas importantes\n"
            "‚Ä¢ Balan√ßo atualizado\n\n"
            "üí° <i>Modo Paper Trading ativo</i>",
    "parse_mode": "HTML"
}

response = requests.post(url, data=test_message)
if response.status_code == 200:
    print("‚úÖ Mensagem de teste enviada com sucesso!")
    print("üì± Verifique seu Telegram!")
else:
    print(f"‚ùå Erro ao enviar mensagem: {response.text}")

# 3. Criar configur
